class FreeTax {
    public sales: number;
    public manager: string;
    constructor(sales: number, manager: string) {
        this.sales = sales;
        this.manager = manager;
    }

    changeTax(amount: number) {
        amount = 0;
        throw Error("You cant set the tax of a taxFree branch")
    }
    add(amount: number) {

        this.sales += amount;

        console.log(
            Ms./ Mr.${ this.manager }, the total Sales of your Branch is ${ this.sales } $
        );
    }
}

class Branch extends FreeTax {
    public tax: number;
    constructor(sales: number, manager: string, tax: number) {
        super(sales, manager);
        this.tax = tax;
    }

    changeTax(amount: number) {
        this.tax = amount;
        console.log(
            Ms./ Mr.${ this.manager }, the new tax of your Branch is ${ this.tax } $
        );
    }

    add(amount: number) {
        this.sales += amount * this.tax;
        console.log(
            Ms./ Mr.${ this.manager }, the total Sales of your Branch is ${ this.sales } $
        );
    }
}

let basma: Branch = new Branch(3000, "Basma", 0.5);
// basma.add(1000);
// basma.changeTax(0.1);
// basma.add(1000);
// basma.changeTax(0.2);
// basma.add(1000);

let chris: FreeTax = new FreeTax(3090, "Chris");
// chris.add(3000);
// chris.changeTax(0.1);

const allBranches = [basma, chris];

allBranches.forEach(branch => branch.changeTax(0.5));